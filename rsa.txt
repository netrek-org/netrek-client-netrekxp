This client incorporates RES-RSA code that uniquely identifies client binary on server side.

If you are willing to build the client without RSA support you will have to figure out how
to do that by yourself. It is a matter of altering project files and removing RSA definitions.

In order to create RSA key you should use mkkey.exe utility located under tools directory
in source distribution.

To create key you will have to provide mkkey.exe with following information:

key_name - general name for the key file
client_type - actual client name that will be shown by server after verification
architecture - Win32 in our case
creator - your mail address for bugs/suggestions
comment - free text

A minimal use of mkkey would look like this (it requires 5 fields to work):
mkkey "testkey" "" "" "" ""

After running mkkey.exe with parameters you will have following files created:

key_name - public key part
key_name.secret - private key part
rsa_box*.c - obfuscated C code containing key identification sequence

The key file is composed of options and their values. Options separated by columns.
Here's how typical key file looks:

NetrekXP-Mod-RSA-Key-Win32:ct=NetrekXP Mod:cr=keyos@keyos.org:\
   :cd=January 2003:ar=Win32\
   :cm=NetrekXP Modification for Windows 9x/NT/2000/XP:\
   :gk=b160145c4205bba8815db0a908fcac9b99a0303ee44c204469374109e09bb782:\
   :pk=8b0f3d3f1b1b8528d86545d3be9d8900f2e3130cb52248df9a5ec63ff9a15e11:

In order for the key file to work with netrek servers you'll have to add another option
called 'client compatibility'. For example NetrekXP Mod is standard2 and inl compatible, so
its key contains 'cl=inl,standard2' option in addition to others.

Here's how public file for NetrekXP Mod looks like:

NetrekXP-Mod-RSA-Key-Win32:ct=NetrekXP Mod:cr=keyos@keyos.org:\
   :cd=January 2003:ar=Win32:cl=inl,standard2:\
   :cm=NetrekXP Modification for Windows 9x/NT/2000/XP:\
   :gk=b160145c4205bba8815db0a908fcac9b99a0303ee44c204469374109e09bb782:\
   :pk=8b0f3d3f1b1b8528d86545d3be9d8900f2e3130cb52248df9a5ec63ff9a15e11:


At the moment you have rsa_box*.c files created you can use them to compile your client.
However having the client compiled with RSA doesn't mean that you will be able to play
on any server that requires RSA verification.

After adding client compatibility option to both key_name and key_name.secret files you
can distribute the public key file to server admins or central key repository that is stored
on clientkeys.netrek.org (port 3530)
In order to add key to central repository you should contact clientkeys@clientkeys.netrek.org
In order to add key to specific server you should talk to server admin
When the key is added to central repository it is still required that keys update utility will be run
on each server.

That's all.

Stas Pirogov (keyos@keyos.org)